apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 55.4.0
    helm:
      values: |
        # CRD management settings
        crds:
          create: true
          keep: false
        
        # Disable admission webhooks to avoid issues on Kind
        prometheusOperator:
          admissionWebhooks:
            enabled: false
            failurePolicy: Ignore
          tls:
            enabled: false
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          
          # Critical setting: install CRDs before components
          manageCRDs: true
        
        alertmanager:
          enabled: true
          alertmanagerSpec:
            replicas: 1
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 25m
                memory: 32Mi
        
        grafana:
          enabled: true
          adminPassword: prom-operator
          # Adjust Grafana resource limits - the default might be too restrictive
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          
          # Use proper probe configuration format
          # The enabled flag is a Helm-level parameter, not a Kubernetes API parameter
          testFramework:
            enabled: false
            
          # Handle service properly
          service:
            enabled: true
            port: 3000
            targetPort: 3000
          
          # Modify probes using correct Kubernetes API fields
          podAnnotations:
            helm.sh/hook: post-install,post-upgrade
          
          # Pass proper probe configs via the Helm values
          deploymentStrategy:
            type: Recreate
          
          # Use settings that are valid helm chart values for the Grafana chart
          deploymentAnnotations:
            rollme: "{{ randAlphaNum 5 }}"
            
          # Configure init container properly
          initChownData:
            enabled: true
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
          
          # Add proper security context
          securityContext:
            runAsUser: 472
            runAsGroup: 472
            fsGroup: 472
          
          # Grafana-specific settings
          persistence:
            enabled: true
            size: 1Gi
          
          # Add readiness/liveness probe config through the appropriate Helm values
          # These will be translated correctly to Kubernetes probe objects
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
            failureThreshold: 3
            
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 15
            failureThreshold: 10
              
        prometheus:
          enabled: true
          prometheusSpec:
            replicas: 1
            resources:
              limits:
                cpu: 200m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 128Mi
        
        # Reduce resources for other components
        kube-state-metrics:
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 32Mi
        
        nodeExporter:
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 32Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-prometheus-stack
  syncPolicy:
    automated: 
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - Replace=true
      - Force=true